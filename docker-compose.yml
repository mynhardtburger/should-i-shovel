services:
  frontend:
    container_name: frontend
    image: nginx:1.23.3
    ports:
      - 80:80
      - 433:433
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:80/" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    volumes:
      - ./client/dist:/usr/share/nginx/html:ro
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      backend:
        condition: service_healthy

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: containers/api/dockerfile
    # ports:
    #   - 8000:80
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:80/" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    volumes:
      - ./api:/code
    tty: true
    depends_on:
      - postgis
    environment:
      AWS_RDS_HOST: postgis
      AWS_RDS_PORT: 5432
      AWS_RDS_DB: postgres
      AWS_RDS_USER: postgres
      # AWS_RDS_PASSWORD: ${AWS_RDS_PASSWORD}
      AWS_RDS_PASSWORD: mysecretpassword
      # AWS_BUCKET: ${AWS_BUCKET}
      AWS_BUCKET: "sto01.dev.us-east-2.aws.shouldishovel.com"
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      # GOOGLE_API_KEY: ${GOOGLE_API_KEY}

  postgis:
    container_name: postgis
    build:
      context: .
      dockerfile: containers/postgis/dockerfile
    # ports:
    #   - 8001:5432
    restart: always
    volumes:
      - postgis-db-volume:/var/lib/postgresql/data
    environment:
      # POSTGRES_PASSWORD: ${AWS_RDS_PASSWORD}
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

volumes:
  postgis-db-volume:
